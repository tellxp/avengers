@import "../../../base";
@import "../../../palette";
@import "../../../typography";
@import "../../../shape";

// State dictionary
$ave-menu-header-container-ingredient-map: (
  shape: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (padding),
  ),
);

$ave-menu-header-ground-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base),
    property: (background-color),
  ),
);
$ave-menu-header-light-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (active, hover, focus),
    property: (background-color),
  ),
);
$ave-menu-header-content-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (color,),
  ),
  typography: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (font,),
  ),
);

// Color
$ave-menu-header-palette: (
  default: ave-palette($ave-palette-grey),
  primary: ave-palette($ave-palette-blue),
  secondary: ave-palette($ave-palette-pink),
  success: ave-palette($ave-palette-green),
  info: ave-palette($ave-palette-cyan),
  warning: ave-palette($ave-palette-deep-orange),
  danger: ave-palette($ave-palette-red),
  link: ave-palette($ave-palette-white)
);
// Typography.
$ave-menu-header-typography: (
  default: ave-typography($ave-typography-yahei),
  primary: ave-typography($ave-typography-yahei),
  secondary: ave-typography($ave-typography-yahei),
  success: ave-typography($ave-typography-yahei),
  info: ave-typography($ave-typography-yahei),
  warning: ave-typography($ave-typography-yahei),
  danger: ave-typography($ave-typography-yahei),
  link: ave-typography($ave-typography-yahei)
);
// Shape.
$ave-menu-header-shape: (
  default: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  primary: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  secondary: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  success: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  info: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  warning: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  danger: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
  link: ave-shape($ave-shape-ratio-dot618, 400, 50, 700),
);

$ave-menu-header-theme: (
  palette: $ave-menu-header-palette,
  typography: $ave-menu-header-typography,
  shape: $ave-menu-header-shape
);
@mixin ave-menu-header-ground-style($theme) {
  @each $ingredient, $style-map in $ave-menu-header-ground-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        @each $state in $state-map {
          $state-style: map_get($scene-style, $state);
          @if ($state == base) {
            & > .v-menu-header {
              & > .v-arcylic-ground {
                @include ave-component-property-style($state-style, $property-map);
              }
            }
          } @else {
            & > .v-menu-header:#{$state} {
              & > .v-arcylic-ground {
                @include ave-component-property-style($state-style, $property-map);
              }
            }
          }
        }
      }
    }
  }

}

@mixin ave-menu-header-light-style($theme) {
  @each $ingredient, $style-map in $ave-menu-header-light-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        @each $state in $state-map {
          $state-style: map_get($scene-style, $state);
          @if ($state == base) {
            & > .v-menu-header {
              & > .v-arcylic-light {
                background-color: transparent;
              }
            }
          } @else {
            & > .v-menu-header:#{$state} {
              & > .v-arcylic-light {
                background-color: rgba($light-color, $golden-ratio);
              }
            }
          }
        }
      }
    }
  }
}

@mixin ave-menu-header-content-style($theme) {
  @each $ingredient, $style-map in $ave-menu-header-content-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        @each $state in $state-map {
          $state-style: map_get($scene-style, $state);
          @if ($state == base) {
            & > .v-menu-header {
              & > .v-arcylic-content {
                @include ave-component-property-style($state-style, $property-map);
              }
            }
          } @else {
            & > .v-menu-header:#{$state} {
              & > .v-arcylic-content {
                @include ave-component-property-style($state-style, $property-map);
              }
            }
          }
        }
      }
    }
  }
}

@mixin ave-menu-header-container-style($theme) {
  @each $ingredient, $style-map in $ave-menu-header-container-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        @each $state in $state-map {
          $state-style: map_get($scene-style, $state);
          @if ($state == base) {
            & > .v-menu-header {
              @include ave-component-property-style($state-style, $property-map);
            }
          } @else {
            & > .v-menu-header:#{$state} {
              @include ave-component-property-style($state-style, $property-map);
            }
          }
        }
      }
    }
  }
}

@mixin ave-menu-header-style() {

  @include ave-menu-header-container-style($ave-menu-header-theme);

  @include ave-menu-header-content-style($ave-menu-header-theme);

  @include ave-menu-header-ground-style($ave-menu-header-theme);

  @include ave-menu-header-light-style($ave-menu-header-theme);

}

