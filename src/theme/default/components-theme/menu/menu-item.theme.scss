@import "../../../base";
@import "../../../palette";
@import "../../../typography";
@import "../../../shape";
@import "../../../elevation";

// Style dictionary
$ave-menu-item-container-ingredient-map: (
  shape: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (padding, ),
  ),
);

$ave-menu-item-ground-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base),
    property: (background-color),
  ),
);
$ave-menu-item-light-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (active, hover, focus),
    property: (background-color),
  ),
);
$ave-menu-item-content-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (color,),
  ),
  typography: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (font,),
  ),
);

// Color
$ave-menu-item-palette: (
  default: ave-palette($ave-palette-grey),
  primary: ave-palette($ave-palette-blue),
  secondary: ave-palette($ave-palette-pink),
  success: ave-palette($ave-palette-green),
  info: ave-palette($ave-palette-cyan),
  warning: ave-palette($ave-palette-deep-orange),
  danger: ave-palette($ave-palette-red),
  link: ave-palette($ave-palette-white)
);

// Typography.
$ave-menu-item-typography: (
  default: ave-typography($ave-typography-yahei),
  primary: ave-typography($ave-typography-yahei),
  secondary: ave-typography($ave-typography-yahei),
  success: ave-typography($ave-typography-yahei),
  info: ave-typography($ave-typography-yahei),
  warning: ave-typography($ave-typography-yahei),
  danger: ave-typography($ave-typography-yahei),
  link: ave-typography($ave-typography-yahei)
);

// Shape.
$ave-menu-item-shape: (
  default: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  primary: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  secondary: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  success: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  info: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  warning: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  danger: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
  link: ave-shape($ave-shape-ratio-dot618, 200, 50, 400),
);

//Define a theme
$ave-menu-item-theme: (
  palette: $ave-menu-item-palette,
  typography: $ave-menu-item-typography,
  shape: $ave-menu-item-shape,
);

@mixin ave-menu-item-ground-style($theme) {
  @each $ingredient, $style-map in $ave-menu-item-ground-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        .v-arcylic-ground {
          @include ave-component-state-style($scene-style, $state-map, $property-map);
        }
      }
    }
  }

}

@mixin ave-menu-item-light-style($theme) {
  @each $ingredient, $style-map in $ave-menu-item-light-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        @each $state in $state-map {
          $state-style: map_get($scene-style, $state);
          &:#{$state} {
            .v-arcylic-light {
              background-color: rgba($light-color, $golden-ratio);
              //@include ave-component-property-style($state-style, $property-map);
            }
          }
        }
      }
    }
  }
}

@mixin ave-menu-item-content-style($theme) {
  .v-menu-item {
    .v-arcylic-content {
      color: $ave-default-content-color;
    }
  }
  @each $ingredient, $style-map in $ave-menu-item-content-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-menu-item-#{$scene} {
        .v-arcylic-content {
          @include ave-component-state-style($scene-style, $state-map, $property-map);
        }
      }
    }
  }
}

@mixin ave-menu-item-container-style($theme) {
  @each $ingredient, $style-map in $ave-menu-item-container-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);
    .#{$ave-prefix}-menu-item {
      @include ave-component-scene-style($ingredient-style, $scene-map, $state-map, $property-map);
    }
  }
}

@mixin ave-menu-item-style() {

  @include ave-menu-item-container-style($ave-menu-item-theme);

  @include ave-menu-item-ground-style($ave-menu-item-theme);

  @include ave-menu-item-light-style($ave-menu-item-theme);

  @include ave-menu-item-content-style($ave-menu-item-theme);

}
