@import "../../../base";
@import "../../../palette";
@import "../../../typography";
@import "../../../shape";
@import "../../../elevation";
@import "../../../utils";


// Mixin overriding default button styles like the gray background, the border, and the outline.
@mixin ave-button-reset {
  @include user-select(none);
  cursor: pointer;
  outline: none;
  border: none;
}

.#{$ave-prefix}-button {
  display: inline-block;
  position: relative;

  // Reset browser <button> styles.
  @include ave-button-reset();
  background-color: transparent;
  color: transparent;

  box-sizing: border-box;
  outline: none;

  // Make anchors render like buttons.
  white-space: nowrap;
  text-decoration: none;

  overflow: hidden;
  border-radius: 0.1rem;
}


$ave-button-elevation: 2;

// Style dictionary
$ave-button-container-ingredient-map: (
  shape: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, focus,),
    property: (padding,),
  ),
);

$ave-button-ground-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base),
    property: (background-color),
  ),
);
$ave-button-light-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (active, hover, focus),
    property: (background-color),
  ),
);
$ave-button-content-ingredient-map: (
  palette: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (color,),
  ),
  typography: (
    scene: (default, primary, secondary, success, info, warning, danger, link,),
    state: (base, active, hover, focus),
    property: (font,),
  ),
);

// Color
$ave-button-palette: (
  default: ave-palette($ave-palette-white, 50, 50),
  primary: ave-palette($ave-palette-indigo),
  secondary: ave-palette($ave-palette-pink, A200),
  success: ave-palette($ave-palette-green),
  info: ave-palette($ave-palette-blue),
  warning: ave-palette($ave-palette-orange),
  danger: ave-palette($ave-palette-red),
  link: ave-palette($ave-palette-light-blue)
);

// Typography.
$ave-button-typography: (
  default: ave-typography($ave-typography-yahei),
  primary: ave-typography($ave-typography-yahei),
  secondary: ave-typography($ave-typography-yahei),
  success: ave-typography($ave-typography-yahei),
  info: ave-typography($ave-typography-yahei),
  warning: ave-typography($ave-typography-yahei),
  danger: ave-typography($ave-typography-yahei),
  link: ave-typography($ave-typography-yahei)
);

// Shape.
$ave-button-shape: (
  default: ave-shape($ave-shape-ratio-1dot618),
  primary: ave-shape($ave-shape-ratio-1dot618),
  secondary: ave-shape($ave-shape-ratio-1dot618),
  success: ave-shape($ave-shape-ratio-1dot618),
  info: ave-shape($ave-shape-ratio-1dot618),
  warning: ave-shape($ave-shape-ratio-1dot618),
  danger: ave-shape($ave-shape-ratio-1dot618),
  link: ave-shape($ave-shape-ratio-1dot618)
);

//Define a theme
$ave-button-theme: (
  palette: $ave-button-palette,
  typography: $ave-button-typography,
  shape: $ave-button-shape,
);

@mixin ave-button-ground-style($theme) {
  @each $ingredient, $style-map in $ave-button-ground-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-button-#{$scene} {
        .#{$ave-prefix}-arcylic-ground {

          z-index: $ave-button-elevation - 3;
          @include ave-component-state-style($scene-style, $state-map, $property-map);
        }
      }
    }
  }

}

@mixin ave-button-light-style($theme) {
  @each $ingredient, $style-map in $ave-button-light-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-button-#{$scene} {
        @each $state in $state-map {
          $state-style: map_get($scene-style, $state);
          &:#{$state} {
            .#{$ave-prefix}-ripple-element {
              background-color: rgba(ave-property($ingredient-style, $scene, $state, background-color), $ave-ripple-opacity);
              z-index: $ave-button-elevation - 1;
            }
            .#{$ave-prefix}-arcylic-light {
              background-color: rgba(ave-property($ingredient-style, $scene, $state, background-color), $ave-light-opacity);
              z-index: $ave-button-elevation - 2;
            }

          }
        }
      }
    }
  }
}

@mixin ave-button-content-style($theme) {
  @each $ingredient, $style-map in $ave-button-content-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);

    @each $scene in $scene-map {
      $scene-style: map_get($ingredient-style, $scene);
      .#{$ave-prefix}-button-#{$scene} {
        .#{$ave-prefix}-arcylic-content {
          z-index: $ave-button-elevation - 1;
          @include ave-component-state-style($scene-style, $state-map, $property-map);
        }
      }
    }
  }
}

@mixin ave-button-container-style($theme) {
  @each $ingredient, $style-map in $ave-button-container-ingredient-map {
    $ingredient-style: map_get($theme, $ingredient);
    $scene-map: map_get($style-map, scene);
    $state-map: map_get($style-map, state);
    $property-map: map_get($style-map, property);
    .#{$ave-prefix}-button {
      z-index: $ave-button-elevation;


      @include ave-elevation($ave-button-elevation);

      @include ave-component-scene-style($ingredient-style, $scene-map, $state-map, $property-map);
    }
  }
}

@mixin ave-button-style() {

  @include ave-button-container-style($ave-button-theme);

  @include ave-button-ground-style($ave-button-theme);

  @include ave-button-light-style($ave-button-theme);

  @include ave-button-content-style($ave-button-theme);

}
