@import "../../core/core";
@import "button";


// Applies typography style to ave-button
@mixin ave-button-typography($theme) {
  // Typography.
  $type: 'control';
  $typography: map_get($theme, 'typography');

  $font-family: map_get($typography, 'font-family');
  $font-size: map_get($typography, 'font-size');
  $font-weight: map_get($typography, 'font-weight');
  $text-decoration: map_get($typography, 'text-decoration');

  font-family: map_get($font-family, $type);
  font-size: map_get($font-size, $type);
  font-weight: map_get($font-weight, $type);
  text-decoration: map_get($text-decoration, $type);
}

@mixin ave-button-sizing($theme) {
  // Sizing.
  $type: 'control';
  $sizing: map_get($theme, 'sizing');

  $margin: map_get($sizing, 'margin');
  $min-width: map_get($sizing, 'min-width');
  $padding: map_get($sizing, 'padding');
  $border: map_get($sizing, 'border');
  $border-radius: map_get($sizing, 'border-radius');

  margin: map_get($margin, $type);
  min-width: map_get($min-width, $type);
  padding: map_get($padding, $type);
  border: map_get($border, $type);
  border-radius: map_get($border-radius, $type);

}


@mixin ave-button-backcolor($theme) {
  //Scene
  @each $scene in $component-scene {
    &.v-button-#{$scene} {
      background-color: ave-scene-property-color($theme, $scene, backcolor);
      &:active {
        background-color: ave-scene-property-color($theme, $scene, backcolor-active);
      }
      &:hover {
        background-color: ave-scene-property-color($theme, $scene, backcolor-hover);
      }
      &:focus {
        background-color: ave-scene-property-color($theme, $scene, backcolor-focus);
      }
      &:visited {
        background-color: ave-scene-property-color($theme, $scene, backcolor-visited);
      }
    }
  }
}

@mixin ave-button-forecolor($theme) {
  //Scene
  @each $scene in $component-scene {
    &.v-button-#{$scene} {
      color: ave-scene-property-color($theme, $scene, forecolor);
      &:active {
        color: ave-scene-property-color($theme, $scene, forecolor-active);
      }
      &:hover {
        color: ave-scene-property-color($theme, $scene, forecolor-hover);
      }
      &:focus {
        color: ave-scene-property-color($theme, $scene, forecolor-focus);
      }
      &:visited {
        color: ave-scene-property-color($theme, $scene, forecolor-visited);
      }
    }
  }
}

@mixin ave-button-theme($theme) {

  .v-button {
    @include ave-button-typography($theme);
    @include ave-button-sizing($theme);
    @include ave-button-backcolor($theme);
    @include ave-button-forecolor($theme);
  }
}
