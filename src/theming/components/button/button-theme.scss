@import "../../core/core";
@import "button";

// Ingredient dictionary
$ave-button-ingredient: (
  palette,
  typography,
  sizing
);

// Property dictionary
$ave-button-palette-property: (
  background-color,
  color
);
$ave-button-typography-property: (
  font
);
$ave-button-sizing-property: (
  padding
);

// Palette
@mixin ave-button-state-property($scene-state, $property) {
  @each $property in $ave-button-palette-property {
    #{$property}: ave-state-property($scene-state, $property);
  }
  @each $property in $ave-button-typography-property {
    #{$property}: ave-state-property($scene-state, $property);
  }
  @each $property in $ave-button-sizing-property {
    #{$property}: ave-state-property($scene-state, $property);
  }
}

@mixin ave-button-scene-state($ingredient-scene) {
  @each $state in $theme-component-state {
    @if ($state == none) {
      & {
        $scene-state: ave-scene-state($ingredient-scene, $state);
        @include ave-button-state-property($scene-state, $state);
      }
    } @else {
      &:#{$state} {
        $scene-state: ave-scene-state($ingredient-scene, $state);
        @include ave-button-state-property($scene-state, $state);
      }
    }
  }
}

@mixin ave-button-ingredient-scene($theme-ingredient) {
  @each $scene in $theme-component-scene {
    $ingredient-scene: ave-ingredient-scene($theme-ingredient, $scene);
    &.v-button-#{$scene} {
      @include ave-button-scene-state($ingredient-scene);
    }
  }
}

@mixin ave-button-theme($theme) {
  @each $ingredient in $ave-button-ingredient {
    $theme-ingredient: ave-theme-ingredient($theme, $ingredient);
    .v-button {
      @include ave-button-ingredient-scene($theme-ingredient);
    }
  }
}

