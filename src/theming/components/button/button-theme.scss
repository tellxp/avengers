@import "../../core/core";
@import "button";

// Applies typography style to ave-button
@mixin ave-button-typography($theme) {
  // Typography.
  $type: 'control';
  $typography: map_get($theme, 'typography');

  $font-family: map_get($typography, 'font-family');
  $font-size: map_get($typography, 'font-size');
  $font-weight: map_get($typography, 'font-weight');
  $text-decoration: map_get($typography, 'text-decoration');

  font-family: map_get($font-family, $type);
  font-size: map_get($font-size, $type);
  font-weight: map_get($font-weight, $type);
  text-decoration: map_get($text-decoration, $type);
}

@mixin ave-button-sizing($theme) {
  // Sizing.
  $type: 'control';
  $sizing: map_get($theme, 'sizing');

  $margin: map_get($sizing, 'margin');
  $min-width: map_get($sizing, 'min-width');
  $padding: map_get($sizing, 'padding');
  $border: map_get($sizing, 'border');
  $border-radius: map_get($sizing, 'border-radius');

  margin: map_get($margin, $type);
  min-width: map_get($min-width, $type);
  padding: map_get($padding, $type);
  border: map_get($border, $type);
  border-radius: map_get($border-radius, $type);

}

@mixin ave-button-back-color($theme) {
  //Color
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, 'background');

  $type: 'control';
  background-color: map-get($background, 'background');
  &.v-button-default {
    background-color: ave-color($primary, 0);
    &:hover {
      background-color: ave-color($primary, 0.5);
    }
  }
  &.v-button-primary {
    background-color: ave-color($primary, 1);
  }
  &.v-button-success {
    background-color: ave-color($primary, 1);
  }
  &.v-button-info {
    background-color: ave-color($primary, 1);
  }
  &.v-button-warning {
    background-color: ave-color($primary, 1);
  }
  &.v-button-danger {
    background-color: ave-color($primary, 1);
  }
  &.v-button-link {
    background-color: ave-color($primary, 1);
  }
}

@mixin ave-button-fore-color($theme) {
  //Color
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  $foreground: map-get($theme, foreground);

  $type: 'control';
  color: ave-color($foreground, 'text');
}

// Applies a focus style to an md-button element for each of the supported palettes.
@mixin ave-button-focus-color($theme) {

  // TODO rewrite color


  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  &.v-primary {
    background-color: ave-color($primary, 0.3);
  }
  &.v-primary:focus {
    background-color: ave-color($primary, 0.20);
  }

  &.v-accent .v-button-focus-overlay {
    background-color: ave-color($accent, 0.12);
  }

  &.v-warn .v-button-focus-overlay {
    background-color: ave-color($warn, 0.12);
  }

  &[disabled] .v-button-focus-overlay {
    background-color: transparent;
  }
}

@mixin ave-button-ripple-color($theme, $hue, $opacity: 0.2) {

  // TODO rewrite color
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  &.v-primary .v-ripple-element {
    background-color: ave-color($primary, $hue, $opacity);
  }

  &.v-accent .v-ripple-element {
    background-color: ave-color($accent, $hue, $opacity);
  }

  &.v-warn .v-ripple-element {
    background-color: ave-color($warn, $hue, $opacity);
  }
}

// Applies a property to an md-button element for each of the supported palettes.
@mixin ave-button-theme-color($theme, $property, $color: 'default') {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  .v-button {
    #{$property}: ave-color($primary, $color);
  }
  &.v-accent {
    #{$property}: ave-color($accent, $color);
  }
  &.v-warn {
    #{$property}: ave-color($warn, $color);
  }

  &.v-primary, &.v-accent, &.v-warn, &[disabled] {
    &[disabled] {
      $palette: if($property == 'color', $foreground, $background);
      #{$property}: ave-color($palette, disabled-button);
    }
  }
}

@mixin ave-button-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .v-button {
    @include ave-button-typography($theme);
    @include ave-button-sizing($theme);
    @include ave-button-back-color($theme);
    @include ave-button-fore-color($theme);
  }
  .v-button:hover {
    background-color: map_get($background, 'hovered-button');
  }
  .v-button:focus {
    padding: 6px 14px 6px 14px;
    border: 2px solid black;
    background-color: map_get($background, 'focused-button');
  }
}
