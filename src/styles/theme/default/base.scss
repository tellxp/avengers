$ave-prefix: 'v';
// Typography
$ave-body-font-size-base: 1em;
$ave-font-family: "Microsoft YaHei", Roboto, 'Helvetica Neue', sans-serif !default;

// Color
$base-color: #ffffff;
$component-back-color: transparentize($base-color, 1);

$theme-component-scene: (
  default,
  primary,
  secondary,
  success,
  info,
  warning,
  danger,
  link
);

$theme-component-state: (
  none,
  active,
  hover,
  focus,
  visited
);
@function ave-ingredient-property($property-palette, $component-property) {
  $component-ingredient-property: ();
  @each $property in $component-property {
    $result: (
      $property: map_get($property-palette, $property)
    );
    $component-property-palette: map_merge($component-ingredient-property, $result);
  }
  @return $component-ingredient-property;
}
@function ave-ingredient-state($state-palette, $component-state, $component-property) {
  $component-state-palette: ();
  @each $state in $component-state {
    $property-palette: map_get($state-palette, $state);
    $result: (
      $state: ave-ingredient-property($property-palette, $component-property)
    );
    $component-state-palette: map_merge($component-state-palette, $result);
  }
  @return $component-state-palette;
}
// Palette
@mixin ave-component-property-style($state-style) {
  @each $property, $value in $state-style {
    #{$property}: $value;
  }
}

@mixin ave-component-state-style($scene-style) {
  @each $state, $state-style in $scene-style {
    @if ($state == none) {
      & {
        @include ave-component-property-style($state-style);
      }
    } @else {
      &:#{$state} {
        @include ave-component-property-style($state-style);
      }
    }
  }
}

@mixin ave-component-scene-style($ingredient-style) {
  @each $scene, $scene-style in $ingredient-style {
    &-#{$scene} {
      @include ave-component-state-style($scene-style);
    }
  }
}

@mixin ave-component-style($component-name, $component-theme) {
  @each $ingredient-style in $component-theme {
    .#{$ave-prefix}-#{$component-name} {
      @include ave-component-scene-style($ingredient-style);
    }
  }
}
