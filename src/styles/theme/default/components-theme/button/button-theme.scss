@import "../../../../components-base/button/button";
@import "../../base";
@import "../../palette";
@import "../../typography";
@import "../../shape";
@import "../../elevation";

// TODO 按照container和分层的准则来重构button的theme
// State dictionary
$ave-button-style-map: (
  scene: (default, primary, secondary, success, info, warning, danger, link,),
  state: (base),
  property: (padding),
);

$ave-button-ground-style-map: (
  scene: (default, primary, secondary, success, info, warning, danger, link,),
  state: (base),
  property: (background-color,),
);
$ave-button-content-style-map: (
  scene: (default, primary, secondary, success, info, warning, danger, link,),
  state: (base, active, hover, focus,),
  property: (color,),
);
// Define a theme.

// Color
$ave-button-palette: (
  default: ave-palette($ave-palette-grey),
  primary: ave-palette($ave-palette-blue),
  secondary: ave-palette($ave-palette-pink),
  success: ave-palette($ave-palette-green),
  info: ave-palette($ave-palette-cyan),
  warning: ave-palette($ave-palette-deep-orange),
  danger: ave-palette($ave-palette-red),
  link: ave-palette($ave-palette-white)
);

// Typography.
$ave-button-typography: (
  default: ave-typography($ave-typography-yahei),
  primary: ave-typography($ave-typography-yahei),
  secondary: ave-typography($ave-typography-yahei),
  success: ave-typography($ave-typography-yahei),
  info: ave-typography($ave-typography-yahei),
  warning: ave-typography($ave-typography-yahei),
  danger: ave-typography($ave-typography-yahei),
  link: ave-typography($ave-typography-yahei)
);

// Frame.
$ave-button-shape: (
  default: ave-shape($ave-shape-ratio-2),
  primary: ave-shape($ave-shape-ratio-1dot618),
  secondary: ave-shape($ave-shape-ratio-1dot618),
  success: ave-shape($ave-shape-ratio-1dot618),
  info: ave-shape($ave-shape-ratio-1dot618),
  warning: ave-shape($ave-shape-ratio-1dot618),
  danger: ave-shape($ave-shape-ratio-1dot618),
  link: ave-shape($ave-shape-ratio-1dot618)
);
@mixin ave-button-ground-style($palette) {
  $scene-map: map_get($ave-button-ground-style-map, scene);
  $state-map: map_get($ave-button-ground-style-map, state);
  $property-map: map_get($ave-button-ground-style-map, property);

  @each $scene in $scene-map {
    $scene-style: map_get($palette, $scene);

    .#{$ave-prefix}-button-#{$scene} {
      .ground {
        @include ave-component-state-style($scene-style, $state-map, $property-map);
      }
    }
  }
}

@mixin ave-button-content-style($palette) {
  $scene-map: map_get($ave-button-content-style-map, scene);
  $state-map: map_get($ave-button-content-style-map, state);
  $property-map: map_get($ave-button-content-style-map, property);

  @each $scene in $scene-map {
    $scene-style: map_get($palette, $scene);
    .#{$ave-prefix}-button-#{$scene} {
      .content {
        @include ave-component-state-style($scene-style, $state-map, $property-map);
      }
    }
  }
}

@mixin ave-button-container-style($shape) {
  $scene-map: map_get($ave-button-style-map, scene);
  $state-map: map_get($ave-button-style-map, state);
  $property-map: map_get($ave-button-style-map, property);
  .#{$ave-prefix}-button {
    @include ave-component-scene-style($shape, $scene-map, $state-map, $property-map);
    @include ave-elevation(2);

  }
}

@mixin ave-button-style() {

  @include ave-button-container-style($ave-button-shape);

  @include ave-button-ground-style($ave-button-palette);

  @include ave-button-content-style($ave-button-palette);

}
