@import "../../../../components-base/button/button";
@import "../../base";
@import "../../palette";
@import "../../typography";
@import "../../shape";
@import "../../elevation";


// TODO 按照container和分层的准则来重构button的theme
// State dictionary
$ave-button-state: (
  none,
  active,
  hover,
  focus,
  visited
);

// Property dictionary
$ave-button-palette-property: (
  background-color,
  color,
);
$ave-button-typography-property: (
  font,
);
$ave-button-shape-property: (
  padding
);
$ave-button-overlay-property: (
  backcolor,
);
// Define a theme.

// Color
$ave-button-palette-base: (
  default: ave-palette($ave-palette-indigo),
  primary: ave-palette($ave-palette-blue),
  secondary: ave-palette($ave-palette-pink),
  success: ave-palette($ave-palette-green),
  info: ave-palette($ave-palette-cyan),
  warning: ave-palette($ave-palette-deep-orange),
  danger: ave-palette($ave-palette-red),
  link: ave-palette($ave-palette-grey)
);

// Typography.
$ave-button-typography-base: (
  default: ave-typography($ave-typography-yahei),
  primary: ave-typography($ave-typography-yahei),
  secondary: ave-typography($ave-typography-yahei),
  success: ave-typography($ave-typography-yahei),
  info: ave-typography($ave-typography-yahei),
  warning: ave-typography($ave-typography-yahei),
  danger: ave-typography($ave-typography-yahei),
  link: ave-typography($ave-typography-yahei)
);

// Frame.
$ave-button-shape-base: (
  default: ave-shape($ave-shape-ratio-2),
  primary: ave-shape($ave-shape-ratio-1dot618),
  secondary: ave-shape($ave-shape-ratio-1dot618),
  success: ave-shape($ave-shape-ratio-1dot618),
  info: ave-shape($ave-shape-ratio-1dot618),
  warning: ave-shape($ave-shape-ratio-1dot618),
  danger: ave-shape($ave-shape-ratio-1dot618),
  link: ave-shape($ave-shape-ratio-1dot618)
);

$ave-button-palette: ave-component-theme-composer($ave-button-palette-base, $ave-button-state, $ave-button-palette-property);
$ave-button-typography: ave-component-theme-composer($ave-button-typography-base, $ave-button-state, $ave-button-typography-property);
$ave-button-shape: ave-component-theme-composer($ave-button-shape-base, $ave-button-state, $ave-button-shape-property);

$ave-button-theme: (
  palette: $ave-button-palette,
  typography: $ave-button-typography,
  shape: $ave-button-shape
);
@mixin ave-button-property-style($state-style) {
  @each $property, $value in $state-style {
    #{$property}: $value;
  }
}

@mixin ave-button-light-overlay-style($state-style) {
  .light-overlay {
    z-index: 0;
    $base-color: ave-property($ave-button-palette, primary, hover, background-color);
    background-color: rgba($base-color, 1);
  }
}

@mixin ave-button-state-style($scene-style) {
  @each $state, $state-style in $scene-style {
    @if ($state == none) {
      & {
        @include ave-button-property-style($state-style);
      }
    } @else {
      &:#{$state} {
        @include ave-button-light-overlay-style($state-style);
        @include ave-button-property-style($state-style);
        @include ave-elevation(4);
      }
    }
  }
}

@mixin ave-button-scene-style($ingredient-style) {
  @each $scene, $scene-style in $ingredient-style {
    &-#{$scene} {
      @include ave-button-state-style($scene-style);
    }
  }
}

@mixin ave-button-style($component-theme) {
  $palette: map_get($component-theme, palette);
  $typography: map_get($component-theme, typography);
  $shape: map_get($component-theme, shape);

  .#{$ave-prefix}-button {
    @include ave-button-scene-style($palette);
  }
  .#{$ave-prefix}-button {
    @include ave-button-scene-style($typography);
  }
  .#{$ave-prefix}-button {
    @include ave-button-scene-style($shape);
  }
  .#{$ave-prefix}-button {
    @include ave-elevation(2);
  }
}
